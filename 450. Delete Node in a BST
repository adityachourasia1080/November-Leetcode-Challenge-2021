/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int pred(TreeNode* root)
    {
        while( root && root->right)
        {
            root=root->right;
        }
        return root->val;
    }
    int suc(TreeNode* root)
    {
        while( root && root->left)
        {
            root=root->left;
        }
        return root->val;
    }
    TreeNode* hat(TreeNode* root,int key,bool & aditya)
    {
        if (root==NULL)   return NULL;
        if (root->left==NULL && root->right==NULL && aditya)  return NULL;
        if (root->val==key)
        {
            aditya=true;
            if (root->left)
            {
                int val= pred( root->left);
                root->val=val;
                root->left= hat(root->left,val,aditya);
            }
            else if (root->right)
            {
                int val= suc(root->right);
                root->val=val;
                root->right=hat(root->right,val,aditya);
            }
            else  return NULL;
            
        }
        else if (root->val > key)
        {
            root->left=  hat( root->left,key,aditya);   
        }
        else    root->right=hat( root->right,key,aditya);
        
        return root;
    }
    TreeNode* deleteNode(TreeNode* root, int key) {
        
        bool aditya=false;
        return hat(root,key,aditya);
    }
};
