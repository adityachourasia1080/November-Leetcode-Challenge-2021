class Solution {
public:
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int n = inorder.size(), p=n-1;
        unordered_map<int, int> m;
        for(int i=0;i<n;i++) m[inorder[i]] = i;
        return constructTree(inorder, postorder, 0, n-1, p, m);
    }
    
    TreeNode* constructTree(vector<int>&in, vector<int>&post, int l, int r, int &idx, unordered_map<int, int>&m)     {
        if(l > r) return NULL;
        
        TreeNode *root = new TreeNode(post[idx--]);
        int i=m[root->val];
        root->right = constructTree(in, post, i+1, r, idx, m);
        root->left = constructTree(in, post, l, i-1, idx, m);
        
        return root;
        
    }
};
