/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void hat(TreeNode* root,vector<int>&no,int form )
    {
        if (root==NULL)   
        {
            return ;
        }
        
        form= form *10+ root->val;
        if (root->left==NULL && root->right==NULL)
        {
            no.push_back(form);
            return ;
        }
        hat(root->left,no,form);
        hat(root->right,no,form);
    }
    int sumNumbers(TreeNode* root) {
        vector<int> no;
        hat(root,no,0);
        int ans=0;
        for (int i=0;i<no.size();i++)
        {
            ans+= no[i];
        }
        return ans;
    }
};
